#YAML
# start_date: 2000-01-19

# SIM config

# all estimates set to False in dynamic system
use_forecast_weight_estimates: False
use_forecast_div_mult_estimates: False
use_instrument_weight_estimates: False
use_instrument_div_mult_estimates: False
use_forecast_scale_estimates: False

# Trading rules
# all rules from rob

volatility_calculation:
  func: "sysquant.estimators.vol.mixed_vol_calc"
  days: 35
  min_periods: 10
  vol_abs_min: 0.0000000001
  slow_vol_years: 20
  proportion_of_slow_vol: 0.35
  backfill: True
#
use_attenuation:
   - 'breakout10'
   - 'breakout20'
   - 'breakout40'
   - 'breakout80'
   - 'breakout160'
   - 'breakout320'
   - 'relmomentum10'
   - 'relmomentum20'
   - 'relmomentum40'
   - 'relmomentum80'
   - 'mrinasset1000'
   - 'assettrend2'
   - 'assettrend4'
   - 'assettrend8'
   - 'assettrend16'
   - 'assettrend32'
   - 'assettrend64'
   - 'normmom2'
   - 'normmom4'
   - 'normmom8'
   - 'normmom16'
   - 'normmom32'
   - 'normmom64'
   - 'momentum4'
   - 'momentum8'
   - 'momentum16'
   - 'momentum32'
   - 'momentum64'
#
trading_rules:
  breakout10:
     function: systems.provided.rules.breakout.breakout
     data:
         - "rawdata.get_daily_prices"
     other_args:
       lookback: 10
  breakout20:
     function: systems.provided.rules.breakout.breakout
     data:
         - "rawdata.get_daily_prices"
     other_args:
       lookback: 20
  breakout40:
     function: systems.provided.rules.breakout.breakout
     data:
         - "rawdata.get_daily_prices"
     other_args:
       lookback: 40
  breakout80:
     function: systems.provided.rules.breakout.breakout
     data:
         - "rawdata.get_daily_prices"
     other_args:
       lookback: 80
  breakout160:
     function: systems.provided.rules.breakout.breakout
     data:
         - "rawdata.get_daily_prices"
     other_args:
       lookback: 160
  breakout320:
     function: systems.provided.rules.breakout.breakout
     data:
         - "rawdata.get_daily_prices"
     other_args:
       lookback: 320
  relmomentum10:
     function: systems.provided.rules.rel_mom.relative_momentum
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
         - "rawdata.normalised_price_for_asset_class"
     other_args:
       horizon: 10
  relmomentum20:
     function: systems.provided.rules.rel_mom.relative_momentum
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
         - "rawdata.normalised_price_for_asset_class"
     other_args:
       horizon: 20
  relmomentum40:
     function: systems.provided.rules.rel_mom.relative_momentum
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
         - "rawdata.normalised_price_for_asset_class"
     other_args:
       horizon: 40
  relmomentum80:
     function: systems.provided.rules.rel_mom.relative_momentum
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
         - "rawdata.normalised_price_for_asset_class"
     other_args:
       horizon: 80
  mrinasset1000:
     function: systems.provided.rules.cs_mr.cross_sectional_mean_reversion
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
         - "rawdata.normalised_price_for_asset_class"
     other_args:
       horizon: 1000
  carry10:
     function: systems.provided.rules.carry.carry
     data:
         - "rawdata.raw_carry"
     other_args:
         smooth_days: 10
  carry30:
     function: systems.provided.rules.carry.carry
     data:
         - "rawdata.raw_carry"
     other_args:
         smooth_days: 30
  carry60:
     function: systems.provided.rules.carry.carry
     data:
         - "rawdata.raw_carry"
     other_args:
         smooth_days: 60
  carry125:
     function: systems.provided.rules.carry.carry
     data:
         - "rawdata.raw_carry"
     other_args:
         smooth_days: 125
  assettrend2:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.normalised_price_for_asset_class"
     other_args:
         Lfast: 2
         Lslow: 8
  assettrend4:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.normalised_price_for_asset_class"
     other_args:
         Lfast: 4
         Lslow: 16
  assettrend8:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.normalised_price_for_asset_class"
     other_args:
         Lfast: 8
         Lslow: 32
  assettrend16:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.normalised_price_for_asset_class"
     other_args:
         Lfast: 16
         Lslow: 64
  assettrend32:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.normalised_price_for_asset_class"
     other_args:
         Lfast: 32
         Lslow: 128
  assettrend64:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.normalised_price_for_asset_class"
     other_args:
         Lfast: 64
         Lslow: 256
  normmom2:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
     other_args:
         Lfast: 2
         Lslow: 8
  normmom4:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
     other_args:
         Lfast: 4
         Lslow: 16
  normmom8:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
     other_args:
         Lfast: 8
         Lslow: 32
  normmom16:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
     other_args:
         Lfast: 16
         Lslow: 64
  normmom32:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
     other_args:
         Lfast: 32
         Lslow: 128
  normmom64:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
     other_args:
         Lfast: 64
         Lslow: 256
  momentum4:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 4
         Lslow: 16
  momentum8:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 8
         Lslow: 32
  momentum16:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 16
         Lslow: 64
  momentum32:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 32
         Lslow: 128
  momentum64:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 64
         Lslow: 256
  relcarry:
     function: systems.provided.rules.carry.relative_carry
     data:
          - "rawdata.smoothed_carry"
          - "rawdata.median_carry_for_asset_class"
  skewabs365:
     function: systems.provided.rules.factors.factor_trading_rule
     data:
          - 'rawdata.get_demeanded_factor_value'
     other_args:
          smooth: 90
          _factor_name: 'neg_skew'
          _demean_method: 'historic_average_factor_value_all_assets'
          _lookback_days: 365
  skewabs180:
     function: systems.provided.rules.factors.factor_trading_rule
     data:
          - 'rawdata.get_demeanded_factor_value'
     other_args:
          smooth: 45
          _factor_name: 'neg_skew'
          _demean_method: 'historic_average_factor_value_all_assets'
          _lookback_days: 180
  skewrv365:
     function: systems.provided.rules.factors.factor_trading_rule
     data:
          - 'rawdata.get_demeanded_factor_value'
     other_args:
          smooth: 90
          _factor_name: 'neg_skew'
          _demean_method: 'average_factor_value_in_asset_class_for_instrument'
          _lookback_days: 365
  skewrv180:
     function: systems.provided.rules.factors.factor_trading_rule
     data:
          - 'rawdata.get_demeanded_factor_value'
     other_args:
          smooth: 45
          _factor_name: 'neg_skew'
          _demean_method: 'average_factor_value_in_asset_class_for_instrument'
          _lookback_days: 180
  accel16:
    function: systems.provided.rules.accel.accel
    data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
    other_args:
         Lfast: 16
  accel32:
    function: systems.provided.rules.accel.accel
    data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
    other_args:
         Lfast: 32
  accel64:
    function: systems.provided.rules.accel.accel
    data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
    other_args:
         Lfast: 64
#
forecast_cap: 20.0

# calculated with systems/jani/static_estimation.yam & systems/jani/run_jani_system.py
# need to be re-estimated when adding/removing rules, dont't change if instruments change
forecast_scalars:
  accel16: 7.871358878858734
  accel32: 5.659225874372126
  accel64: 3.9466567148063514
  assettrend16: 13.278919799409636
  assettrend2: 38.24338987281818
  assettrend32: 8.444702941573576
  assettrend4: 27.308298234170305
  assettrend64: 5.195272055317196
  assettrend8: 19.431777156494086
  breakout10: 0.714698388384173
  breakout160: 0.8771433989948221
  breakout20: 0.8049926241334285
  breakout320: 0.8543487916918481
  breakout40: 0.838392906704176
  breakout80: 0.8675986080986304
  carry10: 30.958901784823365
  carry125: 33.50822767210527
  carry30: 31.27146607555302
  carry60: 31.929298032110488
  momentum16: 5.090420860696628
  momentum32: 3.419947554552708
  momentum4: 10.494685037777735
  momentum64: 2.3143359039794396
  momentum8: 7.352950537583365
  mrinasset1000: 698.1721458751273
  normmom16: 13.220473259867095
  normmom2: 40.736874756415936
  normmom32: 9.0327265794168
  normmom4: 28.07803429713433
  normmom64: 6.133953383978977
  normmom8: 19.350061876013758
  relcarry: 61.50531556793833
  relmomentum10: 79.54909197158025
  relmomentum20: 113.07989311299727
  relmomentum40: 155.6712754441069
  relmomentum80: 213.15866522552025
  skewabs180: 4.492594103861373
  skewabs365: 2.4316498311604033
  skewrv180: 4.912953075723948
  skewrv365: 2.90331154920043

#
percentage_vol_target: 25.0

# initial capital 08-2024, do not change ever!
notional_trading_capital: 76000

base_currency: "EUR"
#
# Portfolio creation
#
# calculated with systems/jani/static_estimation.yaml & systems/jani/run_jani_system.py
# instrument_div_multiplier: 2.5
instrument_div_multiplier: 2.336141398808451

# https://qoppac.blogspot.com/2022/02/exogenous-risk-overlay-take-two.html
# default
#risk_overlay:
#  max_risk_fraction_normal_risk: 1.75
#  max_risk_fraction_stdev_risk: 4.0
#  max_risk_limit_sum_abs_risk: 4.0
#  max_risk_leverage: 20.0
#
# target 25% Rob
risk_overlay:
  max_risk_fraction_normal_risk: 1.4
  max_risk_fraction_stdev_risk: 3.6
  max_risk_limit_sum_abs_risk: 3.4
  max_risk_leverage: 13


# can be calculated with systems/jani/static_estimation.yam & systems/jani/run_jani_system.py
# https://github.com/robcarver17/pysystemtrade/issues/1162
instrument_weights:
  auto_weight_from_grouping:
    parameters:
      use_approx_DM: True
    groups:
      Agricultural:
        weight: 0.143
        grain:
          weight: 0.25
          canola:
            weight: 0.2
            CANOLA: 1.0
          corn:
            weight: 0.2
            CORN: 1.0
          rice:
            weight: 0.2
            RICE: 1.0
          soy:
            weight: 0.2
            SOYBEAN_mini: 0.333
            SOYMEAL: 0.333
            SOYOIL: 0.333
          wheat:
            weight: 0.2
            REDWHEAT: 1.0
        index:
          weight: 0.25
          GICS: 1.0
        meats:
          weight: 0.25
          cows:
            weight: 0.5
            FEEDCOW: 0.5
            LIVECOW: 0.5
        softs:
          weight: 0.25
          cocoa:
            weight: 0.167
            COCOA: 1.0
          coffee:
            weight: 0.167
            COFFEE: 0.5
            ROBUSTA: 0.5
          cotton:
            weight: 0.167
            COTTON2: 1.0
          milk:
            weight: 0.167
            MILK: 0.5
            WHEY: 0.5
          oj:
            weight: 0.167
            OJ: 1.0
          sugar:
            weight: 0.167
            SUGAR11: 1.0
      Currencies:
        weight: 0.143
        cross:
          weight: 0.3333
          GBPEUR: 0.5
          YENEUR: 0.5
        developed:
          weight: 0.3333
          AUD: 0.11111
          CAD: 0.11111
          CHF: 0.11111
          DX: 0.11111
          EUR_micro: 0.11111
          GBP: 0.11111
          NOK: 0.11111
          NZD: 0.11111
          SEK: 0.11111
        em:
          weight: 0.333
          CLP: 0.16666667
          CZK: 0.16666667
          IRS: 0.16666667
          MXP: 0.16666667
          PLN: 0.16666667
          ZAR: 0.16666667
      Energy:
        weight: 0.143
        gas:
          weight: 0.333
          GAS-LAST: 0.333
          GAS_US_mini: 0.333
          GAS-PEN: 0.333
        oil:
          weight: 0.333
          CRUDE_W_micro: 1.0
        products:
          weight: 0.333
          GASOIL: 0.333
          GASOILINE: 0.333
          HEATOIL: 0.333
      Equity:
        weight: 0.143
        Americas:
          weight: 0.2
          index:
            weight: 1.0
            largecap:
              weight: 0.6
              DOW: 0.25
              SP500_micro: 0.25
              NASDAQ_micro: 0.25
              R1000: 0.25
            midcap:
              weight: 0.4
              RUSSELL: 0.5
              SP400: 0.5
        Asia:
          weight: 0.2
          japan:
            weight: 1.0
            NIKKEI: 0.333
            NIKKEI400: 0.333
            TOPIX: 0.333
        EM:
          weight: 0.2
          china:
            weight: 0.5
            FTSECHINAA: 0.5
            HANG_mini: 0.5
          korea:
            weight: 0.5
            KOSPI_mini: 1.0
        EMEA:
          weight: 0.2
          eu:
            weight: 0.1666666667
            index:
              weight: 0.6
              largecap:
                weight: 0.333
                EUROSTX: 0.333
                EUROSTX-LARGE: 0.333
                EUROSTX200-LARGE: 0.333
              midcap:
                weight: 0.333
                EU-MID: 1.0
              smallcap:
                weight: 0.333
                DJSTX-SMALL: 0.5
                EUROSTX-SMALL: 0.5
            sector:
              weight: 0.4
              EU-DJ-TELECOM: 0.333
              EU-DJ-UTIL: 0.333
              EU-DJ-MEDIA: 0.333
          france:
            weight: 0.1666666667
            CAC: 1.0
          germany:
            weight: 0.1666666667
            DAX: 1.0
          netherlands:
            weight: 0.1666666667
            AEX: 1.0
          swiss:
            weight: 0.1666666667
            SMI: 0.5
            SMI-MID: 0.5
          uk:
            weight: 0.1666666667
            FTSE100: 1.0
        World:
          weight: 0.2
          MSCIEAFA: 1.0
      InterestRates:
        weight: 0.143
        Americas:
          weight: 0.4
          govvie:
            weight: 0.6
            US2: 0.143
            US5: 0.143
            US10: 0.143
            US10U: 0.143
            US20: 0.143
            US30: 0.143
            CAD10: 0.143
          stir:
            weight: 0.4
            SOFR: 0.5
            FED: 0.5
        Asia:
          weight: 0.2
          japan:
            weight: 0.6
            JGB-SGX-mini: 1.0
          korea:
            weight: 0.4
            KR3: 0.5
            KR10: 0.5
        EMEA:
          weight: 0.4
          eu:
            weight: 0.143
            EURIBOR: 1.0
          france:
            weight: 0.143
            OAT: 1.0
          german:
            weight: 0.143
            BOBL: 0.25
            BUND: 0.25
            BUXL: 0.25
            SHATZ: 0.25
          italy:
            weight: 0.143
            BTP: 0.5
            BTP3: 0.5
          uk:
            weight: 0.143
            GILT: 1.0
          spain:
            weight: 0.143
            BONO: 1.0
          swiss:
            weight: 0.143
            CH10: 1.0
      Metals:
        weight: 0.143
        crypto:
          weight: 0.333
          BITCOIN: 1.0
        industrial:
          weight: 0.333
          STEEL: 1.0
        precious:
          weight: 0.333
          GOLD_micro: 0.25
          PALLAD: 0.25
          PLAT: 0.25
          SILVER: 0.25
      Volatility:
        weight: 0.143
        VIX_mini: 1.0



# can calculated with systems/jani/static_estimation.yam & systems/jani/run_jani_system.py
# hiearchical weights https://github.com/robcarver17/pysystemtrade/issues/1162
forecast_weights:
  auto_weight_from_grouping:
    parameters:
      use_approx_DM: False
      apply_forecast_post_ceiling_cost_SR_before_weighting: True
    groups:
      convergent:
        weight: 0.4
        mean_reversion:
          weight: 0.3333
          mrinasset1000: 1.0
        skew:
          weight:  0.3333
          skewabs180: 0.25
          skewabs365: 0.25
          skewrv180: 0.25
          skewrv365: 0.25
        carry:
          weight: 0.3333
          purecarry:
            weight: 0.6
            carry10: 0.25
            carry125: 0.25
            carry30: 0.25
            carry60: 0.25
          relcarry:
            weight: 0.4
            relcarry: 1.0
      divergent:
        weight: 0.6
        speed1:
          weight: 0.1
          relmomentum:
            weight: 0.4
            relmomentum10: 1.0
          trend:
            weight: 0.6
            breakout10: 0.25
            assettrend2: 0.25
            normmom2: 0.25
            momentum4: 0.25
        speed2:
          weight: 0.18
          accel:
            weight: 0.3
            accel16: 1.0
          relmomentum:
            weight: 0.3
            relmomentum20: 1.0
          trend:
            weight: 0.4
            breakout20: 0.25
            assettrend4: 0.25
            normmom4: 0.25
            momentum8: 0.25
        speed3:
          weight: 0.18
          accel:
            weight: 0.3
            accel32: 1.0
          relmomentum:
            weight: 0.3
            relmomentum40: 1.0
          trend:
            weight: 0.4
            breakout40: 0.25
            assettrend8: 0.25
            normmom8: 0.25
            momentum16: 0.25
        speed4:
          weight: 0.18
          accel:
            weight: 0.3
            accel64: 1.0
          relmomentum:
            weight: 0.3
            relmomentum80: 1.0
          trend:
            weight: 0.4
            breakout80: 0.25
            assettrend16: 0.25
            normmom16: 0.25
            momentum32: 0.25
        speed5:
          weight: 0.18
          trend:
            weight: 1.0
            breakout160: 0.25
            assettrend32: 0.25
            normmom32: 0.25
            momentum64: 0.25
        speed6:
          weight: 0.18
          trend:
            weight: 1.0
            normmom64: 0.3333
            assettrend64: 0.3333
            breakout320: 0.3333


# can be calculated with systems/jani/static_estimation.yaml & systems/jani/run_jani_system.py
# average of 38 instruments = 2.1
# average of 63 instruments = 2.2
forecast_div_multiplier: 2.2

